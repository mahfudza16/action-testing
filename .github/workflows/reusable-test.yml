name: Reusable test
on: 
  workflow_call:
    secrets:
      ssh_private_key:
        required: true
  push:
    branches-ignore:
      - master
      - main

jobs:
  getTag:
    runs-on: self-hosted
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    steps:
      - name: test
        run: |
          echo '${{ toJson(github) }}'
#       - uses: actions/checkout@v3
#         with:
#           ref: ${{ github.event.client_payload.pull_request.head.ref }}
#           fetch-depth: 0
#       - name: Get the tags
#         env:
#           TAGS: ${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
#         run: |
#           echo "::set-output name=tags::$(echo $TAGS)"
#         id: tags
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get the command arg
        if: ${{ github.event.client_payload.slash_command.args.unnamed.arg1 != '' }}
        run: |
          TAGS=${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}
          echo "::set-output name=tags1::$(echo $TAGS)"
        id: cmd_tags
#       - name: Get the tags
#         if: ${{ github.event.client_payload.slash_command.args.unnamed.arg1 == '' }}
#         run: |
#           TAGS=`git diff ${{ github.event.repository.master_branch }} --name-only --ignore-all-space | grep -e '^roles' | awk -F'/' '{print $2}'|uniq|tr -s '\n' ','|sed 's/.$//'`;
#           echo "::set-output name=tags2::$(echo $TAGS)"
#         id: tags2
#       - name: Get the diff
#         uses: technote-space/get-diff-action@v6
#         if: ${{ github.event.client_payload.slash_command.args.unnamed.arg1 == '' }}
#         with:
#           PATTERNS: '^roles'
#           SEPARATOR: '\n'
      - name: Get roles filters
        run: |
          for role in $(ls -dl roles/** | grep "^d" | awk '{ print $9 }')
          do
            echo "$(echo $role|awk -F'/' '{print $2}'): $role/**" >> .filters.yml
          done
      - name: Get changed roles
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: .filters.yml
#       - name: Get the tags
#         run: |
#           command_tags="${{ steps.cmd_tags.outputs.tags1 }}"
#           if [[ -z "$command_tags" ]]; then
#             TAGS=`echo "${{ steps.tags2.outputs.tags2 }}"`
#           else
#             TAGS=$command_tags;
#           fi
#           echo "::set-output name=tags::$(echo $TAGS)"
#         id: tags
      - name: Print tags
        run: |
          a=${{ join(fromJSON(steps.changes.outputs.changes)) }}
          echo $a
  testing:
    needs: getTag
    runs-on: self-hosted
    if: ${{ needs.getTag.outputs.changes != '' }}
    strategy:
      matrix:
        limit: [uk-fast-test, sg-nme-test]
      fail-fast: false
    steps:
      - name: Print tags
        id: demo
        run: |
          echo "${{ needs.getTag.outputs.changes }}"
      - name: check if executed
        run: |
          echo "Hello world!"
      - name: The demo step has failed
        if: ${{ failure() }}
        run: |
          echo "Hello test"
      - name: Print ref_name
        if: ${{ always() }}
        run: |
          echo "${{ matrix.limit }}"
      - name: Check the branch
        run: |
          echo "${GITHUB_REF_NAME}"

#       - name: Add reaction
#         uses: peter-evans/create-or-update-comment@v2
#         with:
#           comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
#           body: |
#             [Workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
#             > Integration test successful!
#           reaction-type: hooray
#       - name: Update comment if any previous step of job fails
#         if: ${{ failure() }}
#         uses: peter-evans/create-or-update-comment@v2
#         with:
#           comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
#           body: |
#             > Integration test fails :x:
#           reaction-type: confused
