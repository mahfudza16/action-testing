name: 'Lint, run and test'
on:
  push:
    branches-ignore:
      - master
      - main

jobs:
  Check:
    runs-on:
      - self-hosted
    outputs:
      env_vars: ${{ steps.env_vars.outputs.env_vars }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Lint commit message
        uses: wagoid/commitlint-github-action@v4
        with:
          configFile: .github/commitlint.config.js

      - name: Run ansible-lint
        uses: ansible-community/ansible-lint-action@main
        with:
          path: "playbooks/"

      # - name: Setup Python 3.7
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: '3.7'

      # - name: Cache Pip packages
      #   uses: tespkg/actions-cache@v1
      #   with:
      #     key: ${{ github.repository }}/pip-python37-${{ hashFiles('.github/requirements.txt') }}
      #     path: ~/.cache/pip
      #     use-fallback: false
      #     bucket: "${{ secrets.ORG_CACHE_S3_BUCKET }}"
      #     endpoint: "${{ secrets.ORG_CACHE_S3_ENDPOINT }}"
      #     secretKey: "${{ secrets.ORG_CACHE_AWS_SECRET_ACCESS_KEY }}"
      #     accessKey: "${{ secrets.ORG_CACHE_AWS_ACCESS_KEY_ID }}"

      - name: Install Pip packages
        run: |
          pip install --requirement .github/requirements.txt

      - name: Lint Yaml files
        run: |
          yamllint \
          --config-file .github/yamllint_config.yaml \
          --format github \
          --no-warnings \
          .

      - name: Find tags
        run: |
          echo "DEPLOY_TAGS=`echo '${{ github.event.head_commit.message }}' | awk '/Deploy-Tags/ {$1="";print}'`" >> $GITHUB_ENV
          echo "TEST_TAGS=`echo '${{ github.event.head_commit.message }}' | awk '/Test-Tags/ {$1="";print}'`" >> $GITHUB_ENV

      - name: Print env var
        run: |
          echo "::set-output name=env_vars::$(echo $(jq -n 'env'))"
        id: env_vars


  Run_PR_and_test:
    needs: Check
    if: ${{ github.ref_name != github.event.repository.default_branch && fromJson(needs.Check.outputs.env_vars).DEPLOY_TAGS != '' }}
    runs-on:
      - self-hosted
    steps:
      - name: run PR and test
        run: echo "run pr and test>>>"
      - name: run master
        run: echo "run master>>>"
