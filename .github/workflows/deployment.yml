name: deployment
on:
  repository_dispatch:
    types: [deploy-command]
jobs:
  gather_info:
    runs-on: self-hosted
    if: ${{ github.event.client_payload.pull_request.merged == true }}
    outputs:
      tags: ${{ fromJson(steps.command_args.outputs.command_args).unnamed.arg1 }}
      target: ${{ steps.target.outputs.target }}
    steps:
      - uses: actions/checkout@v3
      - name: Get the command arguments
        env:
          ARGS: ${{ toJson(github.event.client_payload.slash_command.args) }}
        run: |
          echo "::set-output name=command_args::$(echo $ARGS)"
        id: command_args
      - name: Tags
        run: |
          echo "${{ fromJson(steps.command_args.outputs.command_args).unnamed.arg1 }}"
      - name: Target
        run: |
          target=`echo '${{ fromJson(steps.command_args.outputs.command_args).named.on }}'`
          echo 'TARGET_INV=[ansible-cpanel_shared, ansible-cpanel_cloud, ansible-cpanel_mail]' >> $GITHUB_ENV
          if [ ! -z $target ]; then
            echo TARGET_INV=$target >> $GITHUB_ENV
          fi
      - name: Test
        run: |
          echo "::set-output name=target::$(echo $(jq -n 'env'))"
        id: target
  deployment:
    runs-on: self-hosted
    needs: gather_info
    if: ${{ github.event.client_payload.pull_request.merged == true }}
    strategy:
      matrix:
        target: ${{ fromJson(needs.gather_info.outputs.target).TARGET_INV }}
    steps:
      - name: Deployment target
        run: |
          echo "${{ matrix.target }}"
          echo "${{ needs.gather_info.outputs.tags }}"
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reaction-type: hooray
